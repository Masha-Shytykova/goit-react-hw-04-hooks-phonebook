{"version":3,"sources":["Components/ContactForm/ContactForm.js","Components/ContactListItem/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/App.js","index.js","Components/ContactForm/ContactForm.module.css","Components/ContactListItem/ContactListItem.module.css"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","event","currentTarget","value","className","s","form","preventDefault","form__label","form__input","type","pattern","title","required","onChange","form__btn","ContactListItem","id","onDeleteContact","list__item","list__btn","onClick","ContactList","contacts","map","Filter","App","JSON","parse","window","localStorage","getItem","setContacts","filter","setFilter","useEffect","setItem","stringify","visibleContacts","normalizedFilter","toLowerCase","contact","includes","getVisibleContacts","uuidv1","find","alert","prevState","contactId","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d4bdb9a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.form__label}>\n        Name\n        <input\n          className={s.form__input}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n      <label className={s.form__label}>\n        Phone number\n        <input\n          className={s.form__input}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n\n      <button className={s.form__btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = { onSubmit: PropTypes.func.isRequired };\n","import PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li className={s.list__item}>\n      {name}: {number}\n      <button\n        className={s.list__btn}\n        type=\"button\"\n        onClick={() => onDeleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import ContactListItem from '../ContactListItem/ContactListItem';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => (\n        <ContactListItem\n          name={name}\n          key={id}\n          number={number}\n          onDeleteContact={() => onDeleteContact(id)}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport { v1 as uuidv1 } from 'uuid';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? [];\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv1(),\n      name: name,\n      number: number,\n    };\n\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    setContacts(prevState => [contact, ...prevState]);\n  };\n\n  const changeFilter = event => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <ContactList contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__cdI02\",\"form__input\":\"ContactForm_form__input__3Uqhh\",\"form__label\":\"ContactForm_form__label__3ddoq\",\"form__btn\":\"ContactForm_form__btn__3x299\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list__item\":\"ContactListItem_list__item__VdJcu\",\"list__btn\":\"ContactListItem_list__btn__1I491\"};"],"sourceRoot":""}